/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.interfacegraphique;

import com.company.tools.DriverManage;
import com.company.tools.Objet;
import static com.company.tools.Objet.sizeYObjt;
import com.company.tools.Parametres;
import static com.company.tools.Parametres.posYCurrentParamDesire;
import static com.company.tools.Parametres.posYCurrentParamProp;
import static com.company.tools.Parametres.positionCurrentBouton;
import com.company.tools.XMLParser;
import com.company.tools.XmlTools;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;

/**
 *
 * @author qbiss
 */
public class InterfaceCreaProp extends java.awt.Frame {

    public static int estCheckDesire = 0, estCheckPropose = 0;
    public static ArrayList<Objet> listOProp = new ArrayList<>();
    public static ArrayList<Objet> listODesire = new ArrayList<>();
    public static int nbObjetProp = 0;
    public static int nbObjetDesire = 0;
    public static int sizeY = 395;
    public static int posYBouton = 310;
    public static InterfaceCreaProp icp = new InterfaceCreaProp();
    private int nbParamProp;
    private int nbParamDesire;
    private final int sizeYDefault = 395;
    private static Objet oProp;
    private static Objet oDesire;

    /**
     * Creates new form InterfaceAut
     */
    public InterfaceCreaProp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        pan = new javax.swing.JPanel();
        titreFenetreProp = new javax.swing.JLabel();
        nomEmetteur = new javax.swing.JLabel();
        texteEmetteur = new javax.swing.JTextField();
        nomRecepteur = new javax.swing.JLabel();
        texteRecepteur = new javax.swing.JTextField();
        duree = new javax.swing.JLabel();
        mailEmetteur = new javax.swing.JLabel();
        texteMailEmetteur = new javax.swing.JTextField();
        mailRecepteur = new javax.swing.JLabel();
        textMailRecepteur = new javax.swing.JTextField();
        coordonnees = new javax.swing.JLabel();
        maProposition = new javax.swing.JLabel();
        titreProp = new javax.swing.JLabel();
        texteTitreProp = new javax.swing.JTextField();
        jePropose = new javax.swing.JLabel();
        typeObjPropose = new javax.swing.JLabel();
        texteTypeObjPropose = new javax.swing.JTextField();
        descriptObjPropose = new javax.swing.JLabel();
        jeDesire = new javax.swing.JLabel();
        typeObjDesire = new javax.swing.JLabel();
        texteTypeObjDesire = new javax.swing.JTextField();
        checkPasObjPropose = new javax.swing.JCheckBox();
        checkPasObjDesire = new javax.swing.JCheckBox();
        boutonValiderProp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        choixNbJour = new javax.swing.JSpinner();
        descriptObjPropose1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ajouterParametreProposition = new javax.swing.JButton();
        ajouterParametreDesire = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nomParametreProp = new javax.swing.JLabel();
        valeurParametreProp = new javax.swing.JLabel();
        texteNomProp = new javax.swing.JTextField();
        texteValeurProp = new javax.swing.JTextField();
        nomParametreDesire = new javax.swing.JLabel();
        texteNomDesire = new javax.swing.JTextField();
        texteValeurDesire = new javax.swing.JTextField();
        valeurParametreDesire = new javax.swing.JLabel();
        ajouterObjProp = new javax.swing.JButton();
        ajouterObjDesire = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pan.setMinimumSize(new java.awt.Dimension(1200, 1200));
        pan.setPreferredSize(new java.awt.Dimension(1700, 870));
        pan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titreFenetreProp.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        titreFenetreProp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titreFenetreProp.setText("Je propose un troc / J'ai une demande : ");
        titreFenetreProp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        titreFenetreProp.setMaximumSize(new java.awt.Dimension(465, 40));
        titreFenetreProp.setMinimumSize(new java.awt.Dimension(465, 40));
        titreFenetreProp.setPreferredSize(new java.awt.Dimension(465, 40));
        pan.add(titreFenetreProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 500, 50));

        nomEmetteur.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nomEmetteur.setText("Nom émetteur : *");
        nomEmetteur.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(nomEmetteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 160, 20));

        texteEmetteur.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        texteEmetteur.setNextFocusableComponent(texteRecepteur);
        pan.add(texteEmetteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 330, 20));

        nomRecepteur.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nomRecepteur.setText("Nom récepteur : *");
        nomRecepteur.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(nomRecepteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 160, 20));
        nomRecepteur.getAccessibleContext().setAccessibleName("");

        texteRecepteur.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        texteRecepteur.setNextFocusableComponent(choixNbJour);
        pan.add(texteRecepteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 330, 20));

        duree.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        duree.setText("Durée de validité : *");
        duree.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(duree, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 160, 20));

        mailEmetteur.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mailEmetteur.setText("Mail émetteur :");
        mailEmetteur.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(mailEmetteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 160, 20));

        texteMailEmetteur.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        texteMailEmetteur.setNextFocusableComponent(textMailRecepteur);
        pan.add(texteMailEmetteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 330, 20));

        mailRecepteur.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mailRecepteur.setText("Mail récepteur : ");
        mailRecepteur.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(mailRecepteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 160, -1));

        textMailRecepteur.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textMailRecepteur.setNextFocusableComponent(texteTitreProp);
        pan.add(textMailRecepteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 330, -1));

        coordonnees.setBackground(new java.awt.Color(210, 210, 210));
        coordonnees.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        coordonnees.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coordonnees.setText("Coordonées :");
        coordonnees.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        coordonnees.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        coordonnees.setMaximumSize(new java.awt.Dimension(110, 30));
        coordonnees.setMinimumSize(new java.awt.Dimension(110, 30));
        coordonnees.setPreferredSize(new java.awt.Dimension(110, 30));
        pan.add(coordonnees, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 480, -1));

        maProposition.setBackground(new java.awt.Color(210, 210, 210));
        maProposition.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        maProposition.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        maProposition.setText("Ma proposition :");
        maProposition.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        maProposition.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        maProposition.setMaximumSize(new java.awt.Dimension(110, 30));
        maProposition.setMinimumSize(new java.awt.Dimension(110, 30));
        maProposition.setPreferredSize(new java.awt.Dimension(110, 30));
        pan.add(maProposition, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, 1020, -1));

        titreProp.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        titreProp.setText("Titre de ma proposition : *");
        titreProp.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(titreProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, -1, -1));

        texteTitreProp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        texteTitreProp.setNextFocusableComponent(texteTypeObjPropose);
        pan.add(texteTitreProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 110, 810, -1));

        jePropose.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jePropose.setText("Je propose : *");
        pan.add(jePropose, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 140, 180, 20));

        typeObjPropose.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        typeObjPropose.setText("Type de l'objet :");
        typeObjPropose.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(typeObjPropose, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 170, 170, -1));

        texteTypeObjPropose.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pan.add(texteTypeObjPropose, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 170, 320, -1));

        descriptObjPropose.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        descriptObjPropose.setText("Description de l'objet (ex : taille, couleur, prix,...) :");
        descriptObjPropose.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(descriptObjPropose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 200, 360, -1));

        jeDesire.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jeDesire.setText("Je désire : *");
        pan.add(jeDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 140, -1, -1));

        typeObjDesire.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        typeObjDesire.setText("Type de l'objet :");
        typeObjDesire.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(typeObjDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 170, 170, -1));

        texteTypeObjDesire.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        texteTypeObjDesire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texteTypeObjDesireActionPerformed(evt);
            }
        });
        pan.add(texteTypeObjDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 170, 320, -1));

        checkPasObjPropose.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        checkPasObjPropose.setText("Je ne veux pas proposer d'objet");
        checkPasObjPropose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPasObjProposeActionPerformed(evt);
            }
        });
        pan.add(checkPasObjPropose, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 130, 320, 40));

        checkPasObjDesire.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        checkPasObjDesire.setText("Je désire aucun objet");
        checkPasObjDesire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPasObjDesireActionPerformed(evt);
            }
        });
        pan.add(checkPasObjDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 130, 320, 40));

        boutonValiderProp.setBackground(new java.awt.Color(102, 204, 255));
        boutonValiderProp.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        boutonValiderProp.setText("Envoyer la proposition / demande ");
        boutonValiderProp.setMaximumSize(new java.awt.Dimension(275, 30));
        boutonValiderProp.setMinimumSize(new java.awt.Dimension(275, 30));
        boutonValiderProp.setNextFocusableComponent(texteEmetteur);
        boutonValiderProp.setPreferredSize(new java.awt.Dimension(275, 30));
        boutonValiderProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonValiderPropActionPerformed(evt);
            }
        });
        pan.add(boutonValiderProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 500, 40));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Jour(s)");
        pan.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, -1, 40));

        choixNbJour.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        choixNbJour.setNextFocusableComponent(texteMailEmetteur);
        choixNbJour.setValue(1);
        choixNbJour.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                choixNbJourStateChanged(evt);
            }
        });
        pan.add(choixNbJour, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 50, -1));

        descriptObjPropose1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        descriptObjPropose1.setText("Description de l'objet  :");
        descriptObjPropose1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        pan.add(descriptObjPropose1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 200, 360, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Veuillez ajouter différents paramètres de l'objet (Taille,Couleur,Prix,..) :");
        pan.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 230, -1, -1));

        ajouterParametreProposition.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ajouterParametreProposition.setText("Ajouter un paramètre");
        ajouterParametreProposition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterParametrePropositionActionPerformed(evt);
            }
        });
        pan.add(ajouterParametreProposition, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 250, 170, -1));

        ajouterParametreDesire.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ajouterParametreDesire.setText("Ajouter un paramètre");
        ajouterParametreDesire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterParametreDesireActionPerformed(evt);
            }
        });
        pan.add(ajouterParametreDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 250, 170, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Veuillez ajouter différents paramètres de l'objet (Taille,Couleur,Prix,..) :");
        pan.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 230, -1, -1));

        nomParametreProp.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nomParametreProp.setText("Nom du paramètre :");
        pan.add(nomParametreProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, -1, 20));

        valeurParametreProp.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        valeurParametreProp.setText("Valeur du¨parametre :");
        pan.add(valeurParametreProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 280, -1, 20));

        texteNomProp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pan.add(texteNomProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 250, 190, -1));

        texteValeurProp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pan.add(texteValeurProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 280, 170, -1));

        nomParametreDesire.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nomParametreDesire.setText("Nom du paramètre :");
        pan.add(nomParametreDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 250, -1, 20));

        texteNomDesire.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pan.add(texteNomDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 250, 190, -1));

        texteValeurDesire.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pan.add(texteValeurDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 280, 170, -1));

        valeurParametreDesire.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        valeurParametreDesire.setText("Valeur du¨parametre :");
        pan.add(valeurParametreDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 280, -1, 20));

        ajouterObjProp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ajouterObjProp.setText("Ajouter un objet");
        ajouterObjProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterObjPropActionPerformed(evt);
            }
        });
        pan.add(ajouterObjProp, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 280, 170, -1));

        ajouterObjDesire.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ajouterObjDesire.setText("Ajouter un objet");
        ajouterObjDesire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterObjDesireActionPerformed(evt);
            }
        });
        pan.add(ajouterObjDesire, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 280, 170, -1));

        add(pan, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void checkPasObjProposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPasObjProposeActionPerformed
        JCheckBox cb = (JCheckBox) evt.getSource();

        boolean isSel = cb.isSelected();

        if (isSel) {
            texteTypeObjPropose.setFocusable(false);
            texteTypeObjPropose.setText("");
            texteTypeObjPropose.setBackground(new Color(230, 230, 230));

            texteValeurProp.setFocusable(false);
            texteValeurProp.setText("");
            texteValeurProp.setBackground(new Color(230, 230, 230));

            texteNomProp.setFocusable(false);
            texteNomProp.setText("");
            texteNomProp.setBackground(new Color(230, 230, 230));

            ajouterParametreProposition.setEnabled(false);
            ajouterObjProp.setEnabled(false);

            estCheckPropose = 1;

            pan.repaint();
        } else {
            texteTypeObjPropose.setFocusable(true);
            texteTypeObjPropose.setBackground(new Color(255, 255, 255));

            texteValeurProp.setFocusable(true);
            texteValeurProp.setText("");
            texteValeurProp.setBackground(new Color(255, 255, 255));

            texteNomProp.setFocusable(true);
            texteNomProp.setText("");
            texteNomProp.setBackground(new Color(255, 255, 255));

            ajouterParametreProposition.setEnabled(true);
            ajouterObjProp.setEnabled(true);

            estCheckPropose = 0;

            pan.repaint();
        }
    }//GEN-LAST:event_checkPasObjProposeActionPerformed

    private void checkPasObjDesireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPasObjDesireActionPerformed
        JCheckBox cb = (JCheckBox) evt.getSource();

        boolean isSel = cb.isSelected();

        if (isSel) {
            texteTypeObjDesire.setFocusable(false);
            texteTypeObjDesire.setText("");
            texteTypeObjDesire.setBackground(new Color(230, 230, 230));

            texteValeurDesire.setFocusable(false);
            texteValeurDesire.setText("");
            texteValeurDesire.setBackground(new Color(240, 240, 240));

            texteNomDesire.setFocusable(false);
            texteNomDesire.setText("");
            texteNomDesire.setBackground(new Color(240, 240, 240));

            ajouterParametreDesire.setEnabled(false);
            ajouterObjDesire.setEnabled(false);

            estCheckDesire = 1;

            pan.repaint();
        } else {
            texteTypeObjDesire.setFocusable(true);
            texteTypeObjDesire.setBackground(new Color(255, 255, 255));

            texteValeurDesire.setFocusable(true);
            texteValeurDesire.setText("");
            texteValeurDesire.setBackground(new Color(255, 255, 255));

            texteNomDesire.setFocusable(true);
            texteNomDesire.setText("");
            texteNomDesire.setBackground(new Color(255, 255, 255));

            ajouterParametreDesire.setEnabled(true);
            ajouterObjDesire.setEnabled(true);

            estCheckDesire = 0;

            pan.repaint();
        }

    }//GEN-LAST:event_checkPasObjDesireActionPerformed

    private void boutonValiderPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonValiderPropActionPerformed
        int err = 0;

        if (texteEmetteur.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Le champs \"Nom émetteur\" doit être rempli!");
            err = 1;
        }

        if (texteRecepteur.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Le champs \"Nom récepteur\" doit être rempli!");
            err = 1;
        }

        if (texteTitreProp.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Le champs \"Titre de ma proposition\" doit être rempli!");
            err = 1;
        }

        if (err != 1) {

            XmlTools xmlTools = new XmlTools();

            DriverManage setFic = new DriverManage();
            Statement s = setFic.ConnectionDB();
            String emetteur = texteEmetteur.getText();
            String mailE = texteMailEmetteur.getText();
            String mailR = textMailRecepteur.getText();
            String recepteur = texteRecepteur.getText();
            int dureeV = (Integer) choixNbJour.getValue();
            Date now = new Date();
            String date = now.toString();
            String xml = "xml.xml";
            String type = "dmndePropo";
            String titre = texteTitreProp.getText();
            String reponse = setFic.verifieReponseDMD(s, mailE, mailR);


            if (reponse.equals("Accepte")) {
                if (xmlTools.creerProp(emetteur, recepteur, dureeV, mailE, mailR, titre, listOProp, listODesire)) {

                    int idFic = setFic.ajoutFichier(s, mailE, mailR);
                    int idPropo = setFic.ajoutPropo(s, titre, type);
                    int msgId = XMLParser.recupererIdMsg(xml);
                    setFic.ajoutMessage(s, type, msgId, idFic, idPropo, dureeV, date);
                    JOptionPane.showMessageDialog(null, "Proposition crée avec succes");
                } else {
                    JOptionPane.showMessageDialog(null, "Erreur veuillez resseayer plus tard");
                }

            } else {
                if (reponse.equals("Refuse")) {
                    System.out.println(mailR + "n'a pas accepté votre demande de troc");
                } else {
                    System.out.println(reponse);
                }
            }

        }
    }//GEN-LAST:event_boutonValiderPropActionPerformed

    private void choixNbJourStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_choixNbJourStateChanged
        JSpinner s = (JSpinner) evt.getSource();

        int value = (Integer) s.getValue();

        if (value < 1) {
            choixNbJour.setValue(1);
        }
    }//GEN-LAST:event_choixNbJourStateChanged

    private void ajouterParametrePropositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterParametrePropositionActionPerformed
        if (!texteNomProp.getText().isEmpty() && !texteValeurProp.getText().isEmpty()) {
            Parametres p = new Parametres(texteNomProp.getText(), texteValeurProp.getText());

            oProp.lp.add(p);
            oProp.nbParam++;

            p.afficherParam(0, oProp.nbParam);

            texteNomProp.setText("");
            texteValeurProp.setText("");

        } else {
            JOptionPane.showMessageDialog(null, "Les champs \"Nom du paramètre\" et \"Valeur du paramètre\" de la section \"Je propse :\" doivent être remplis!");
        }

    }//GEN-LAST:event_ajouterParametrePropositionActionPerformed

    private void ajouterParametreDesireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterParametreDesireActionPerformed
        if (!texteNomDesire.getText().isEmpty() && !texteValeurDesire.getText().isEmpty()) {
            Parametres p = new Parametres(texteNomDesire.getText(), texteValeurDesire.getText());

            oDesire.lp.add(p);
            oDesire.nbParam++;

            p.afficherParam(1, oDesire.nbParam);

            texteNomDesire.setText("");
            texteValeurDesire.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Les champs \"Nom du paramètre\" et \"Valeur du paramètre\" de la section \"Je désire :\" doivent être remplis!");
        }
    }//GEN-LAST:event_ajouterParametreDesireActionPerformed

    private void ajouterObjPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterObjPropActionPerformed
        if (texteTypeObjPropose.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Le champ \"Type de l'objet\" de la section \"Je propose :\" doit être rempli!");
        } else {
            Dimension d;
            Point p;
            oProp.setType(texteTypeObjPropose.getText());
            listOProp.add(oProp);

            listOProp.get(nbObjetProp).removeAllParam();
            sizeY = sizeYDefault;

            if (nbObjetProp > nbObjetDesire) {
                d = new Dimension(1570, sizeY + nbObjetProp * sizeYObjt);
                sizeY += nbObjetProp * sizeYObjt;
                boutonValiderProp.setLocation(1050, sizeY + nbObjetProp * sizeYObjt - sizeYObjt);
                posYBouton = sizeY + nbObjetProp * sizeYObjt - sizeYObjt;
            } else {
                d = new Dimension(1570, sizeY + nbObjetDesire * sizeYObjt);
                sizeY += nbObjetDesire * sizeYObjt;
                boutonValiderProp.setLocation(1050, sizeY + nbObjetDesire * sizeYObjt - sizeYObjt);
                posYBouton = sizeY + nbObjetDesire * sizeYObjt - sizeYObjt;
            }
            p = new Point(1050, positionCurrentBouton);
            boutonValiderProp.setLocation(p);
            icp.setSize(d);
            icp.setPreferredSize(d);
            pan.setSize(d);
            pan.setPreferredSize(d);

            listOProp.get(nbObjetProp).afficherObj(0, nbObjetProp);

            nbObjetProp++;
            
            texteTypeObjPropose.setText("");

            texteTypeObjPropose.setText("");

            revalidate();

            oProp = new Objet();
            oProp.nbParam = 0;

            posYCurrentParamProp = 310 + nbObjetProp * sizeYObjt;
            posYBouton = positionCurrentBouton;
        }
    }//GEN-LAST:event_ajouterObjPropActionPerformed

    private void ajouterObjDesireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterObjDesireActionPerformed
        if (texteTypeObjDesire.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Le champ \"Type de l'objet\" de la section \"Je désire :\" doit être rempli!");
        } else {
            Dimension d;
            Point p;
            oDesire.setType(texteTypeObjDesire.getText());
            listODesire.add(oDesire);

            listODesire.get(nbObjetDesire).removeAllParam();
            sizeY = sizeYDefault;

            if (nbObjetDesire > nbObjetProp) {
                d = new Dimension(1570, sizeY + nbObjetDesire * sizeYObjt);
                sizeY += nbObjetDesire * sizeYObjt;
                boutonValiderProp.setLocation(1050, sizeY + nbObjetDesire * sizeYObjt - sizeYObjt);
                posYBouton = sizeY + nbObjetDesire * sizeYObjt - sizeYObjt;
            } else {
                d = new Dimension(1570, sizeY + nbObjetProp * sizeYObjt);
                sizeY += nbObjetProp * sizeYObjt;
                boutonValiderProp.setLocation(1050, sizeY + nbObjetProp * sizeYObjt - sizeYObjt);
                posYBouton = sizeY + nbObjetProp * sizeYObjt - sizeYObjt;
            }
            icp.setSize(d);
            icp.setPreferredSize(d);
            pan.setSize(d);
            pan.setPreferredSize(d);

            listODesire.get(nbObjetDesire).afficherObj(1, nbObjetDesire);

            nbObjetDesire++;
            
            texteTypeObjDesire.setText("");

            texteTypeObjDesire.setText("");

            revalidate();

            oDesire = new Objet();
            oDesire.nbParam = 0;

            posYCurrentParamDesire = 310 + nbObjetDesire * sizeYObjt;
        }
    }//GEN-LAST:event_ajouterObjDesireActionPerformed

    private void texteTypeObjDesireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texteTypeObjDesireActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_texteTypeObjDesireActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            oProp = new Objet();
            oDesire = new Objet();

            icp.setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajouterObjDesire;
    private javax.swing.JButton ajouterObjProp;
    private javax.swing.JButton ajouterParametreDesire;
    private javax.swing.JButton ajouterParametreProposition;
    public static javax.swing.JButton boutonValiderProp;
    private javax.swing.JCheckBox checkPasObjDesire;
    private javax.swing.JCheckBox checkPasObjPropose;
    private javax.swing.JSpinner choixNbJour;
    private javax.swing.JLabel coordonnees;
    private javax.swing.JLabel descriptObjPropose;
    private javax.swing.JLabel descriptObjPropose1;
    private javax.swing.JLabel duree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JLabel jeDesire;
    private javax.swing.JLabel jePropose;
    private javax.swing.JLabel maProposition;
    private javax.swing.JLabel mailEmetteur;
    private javax.swing.JLabel mailRecepteur;
    private javax.swing.JLabel nomEmetteur;
    private javax.swing.JLabel nomParametreDesire;
    private javax.swing.JLabel nomParametreProp;
    private javax.swing.JLabel nomRecepteur;
    public static javax.swing.JPanel pan;
    private javax.swing.JTextField textMailRecepteur;
    private javax.swing.JTextField texteEmetteur;
    private javax.swing.JTextField texteMailEmetteur;
    private javax.swing.JTextField texteNomDesire;
    private javax.swing.JTextField texteNomProp;
    private javax.swing.JTextField texteRecepteur;
    private javax.swing.JTextField texteTitreProp;
    public static javax.swing.JTextField texteTypeObjDesire;
    public static javax.swing.JTextField texteTypeObjPropose;
    private javax.swing.JTextField texteValeurDesire;
    private javax.swing.JTextField texteValeurProp;
    private javax.swing.JLabel titreFenetreProp;
    private javax.swing.JLabel titreProp;
    private javax.swing.JLabel typeObjDesire;
    private javax.swing.JLabel typeObjPropose;
    private javax.swing.JLabel valeurParametreDesire;
    private javax.swing.JLabel valeurParametreProp;
    // End of variables declaration//GEN-END:variables
}
